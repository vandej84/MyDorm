[{"C:\\Users\\jerem\\sptestingapp\\src\\index.js":"1","C:\\Users\\jerem\\sptestingapp\\src\\App.js":"2","C:\\Users\\jerem\\sptestingapp\\src\\reportWebVitals.js":"3","C:\\Users\\jerem\\sptestingapp\\src\\aws-exports.js":"4","C:\\Users\\jerem\\sptestingapp\\src\\graphql\\mutations.js":"5","C:\\Users\\jerem\\sptestingapp\\src\\graphql\\queries.js":"6","C:\\Users\\jerem\\sptestingapp\\src\\components\\lightsData.js":"7","C:\\Users\\jerem\\sptestingapp\\src\\components\\doorsData.js":"8","C:\\Users\\jerem\\sptestingapp\\src\\components\\windowsData.js":"9","C:\\Users\\jerem\\sptestingapp\\src\\components\\heatersData.js":"10","C:\\Users\\jerem\\sptestingapp\\src\\components\\networkStatusData.js":"11"},{"size":598,"mtime":1610138548651,"results":"12","hashOfConfig":"13"},{"size":4868,"mtime":1611853725864,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":846,"mtime":1610140401687,"results":"16","hashOfConfig":"13"},{"size":952,"mtime":1610140397932,"results":"17","hashOfConfig":"13"},{"size":622,"mtime":1610140397857,"results":"18","hashOfConfig":"13"},{"size":2636,"mtime":1611791840947,"results":"19","hashOfConfig":"13"},{"size":2620,"mtime":1611791837819,"results":"20","hashOfConfig":"13"},{"size":2655,"mtime":1611791908329,"results":"21","hashOfConfig":"13"},{"size":2648,"mtime":1611791681232,"results":"22","hashOfConfig":"13"},{"size":1800,"mtime":1611791479765,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"knv0ok",{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},"C:\\Users\\jerem\\sptestingapp\\src\\index.js",[],["53","54"],"C:\\Users\\jerem\\sptestingapp\\src\\App.js",["55","56","57","58"],"C:\\Users\\jerem\\sptestingapp\\src\\reportWebVitals.js",[],"C:\\Users\\jerem\\sptestingapp\\src\\aws-exports.js",[],"C:\\Users\\jerem\\sptestingapp\\src\\graphql\\mutations.js",[],["59","60"],"C:\\Users\\jerem\\sptestingapp\\src\\graphql\\queries.js",[],"C:\\Users\\jerem\\sptestingapp\\src\\components\\lightsData.js",["61"],"import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nimport Amplify from 'aws-amplify';\r\nimport awsconfig from './../aws-exports';\r\nimport '@aws-amplify/ui/dist/style.css';\r\n\r\nimport { PubSub, Auth } from 'aws-amplify';\r\nimport { AWSIoTProvider } from '@aws-amplify/pubsub/lib/Providers';\r\n\r\nAmplify.configure(awsconfig);\r\n\r\n// Apply plugin with configuration\r\nAmplify.addPluggable(new AWSIoTProvider({\r\n aws_pubsub_region: 'us-east-1',\r\n aws_pubsub_endpoint: 'wss://afz62ntog0e2g-ats.iot.us-east-1.amazonaws.com/mqtt',\r\n}));\r\n\r\n\r\nclass Lights extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          lightMsg: '{\"null\": 0}'\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        PubSub.subscribe('mydorm-light-iot-policy').subscribe({\r\n          next: data => {\r\n            try{\r\n\t\t\t\tconsole.log(data)\r\n              this.setState({ lightMsg: data.value });\r\n            }\r\n            catch (error){\r\n              console.log(\"Error, are you sending the correct data?\");\r\n            }\r\n          },\r\n          error: error => console.error(error),\r\n          close: () => console.log('Done'),\r\n        });\r\n      }\r\n\t  \r\n\t  publishLightsOn = () => {\r\n\t\tconsole.log('Publishing...');\r\n\t\tPubSub.publish('mydorm-networkstatus-iot-policy', {\"Network\":\"Online\"});\r\n\t\tPubSub.publish('mydorm-light-iot-policy', {\"Lights\":\"On\"});\r\n\t  }\r\n\t  publishLightsOff = () => {\r\n\t\tconsole.log('Publishing...');\r\n\t\tPubSub.publish('mydorm-networkstatus-iot-policy', {\"Network\":\"Offline\"});\r\n\t\tPubSub.publish('mydorm-light-iot-policy', {\"Lights\":\"Off\"});\r\n\t  }\r\n\t  \r\n    render(){\r\n        const { lightMsg } = this.state;\r\n        let lightData = lightMsg[this.props.name];\r\n\r\n        return(\r\n            <div className=\"Light\">\r\n                <Card style={{ width: '18rem' }}>\r\n                    <Card.Body>\r\n                        <Card.Title>{this.props.name}</Card.Title>\r\n                        <Card.Text> \r\n\t\t\t\t\t\t\t<button onClick={this.publishLightsOn}>Turn Lights On</button>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<button onClick={this.publishLightsOff}>Turn Lights Off</button>\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n\t\t\t\t<Card style={{ width: '18rem' }}>\r\n                    <Card.Body>\r\n                        <Card.Title>{this.props.name} Status</Card.Title>\r\n                        <Card.Text> \r\n                            { lightData }\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Lights;","C:\\Users\\jerem\\sptestingapp\\src\\components\\doorsData.js",["62"],"import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nimport Amplify from 'aws-amplify';\r\nimport awsconfig from './../aws-exports';\r\nimport '@aws-amplify/ui/dist/style.css';\r\n\r\nimport { PubSub, Auth } from 'aws-amplify';\r\nimport { AWSIoTProvider } from '@aws-amplify/pubsub/lib/Providers';\r\n\r\nAmplify.configure(awsconfig);\r\n\r\n// Apply plugin with configuration\r\nAmplify.addPluggable(new AWSIoTProvider({\r\n aws_pubsub_region: 'us-east-1',\r\n aws_pubsub_endpoint: 'wss://afz62ntog0e2g-ats.iot.us-east-1.amazonaws.com/mqtt',\r\n}));\r\n\r\n\r\nclass Doors extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          doorMsg: '{\"null\": 0}'\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        PubSub.subscribe('mydorm-door-iot-policy').subscribe({\r\n          next: data => {\r\n            try{\r\n\t\t\t\tconsole.log(data)\r\n              this.setState({ doorMsg: data.value });\r\n            }\r\n            catch (error){\r\n              console.log(\"Error, are you sending the correct data?\");\r\n            }\r\n          },\r\n          error: error => console.error(error),\r\n          close: () => console.log('Done'),\r\n        });\r\n      }\r\n\t  \r\n\t  publishOpenDoor = () => {\r\n\t\tconsole.log('Publishing...');\r\n\t\tPubSub.publish('mydorm-networkstatus-iot-policy', {\"Network\":\"Online\"});\r\n\t\tPubSub.publish('mydorm-door-iot-policy', {\"Door\":\"Unlocked\"});\r\n\t  }\r\n\t  publishCloseDoor = () => {\r\n\t\tconsole.log('Publishing...');\r\n\t\tPubSub.publish('mydorm-networkstatus-iot-policy', {\"Network\":\"Offline\"});\r\n\t\tPubSub.publish('mydorm-door-iot-policy', {\"Door\":\"Locked\"});\r\n\t  }\r\n\t  \r\n    render(){\r\n        const { doorMsg } = this.state;\r\n        let doorData = doorMsg[this.props.name];\r\n\r\n        return(\r\n            <div className=\"Door\">\r\n                <Card style={{ width: '18rem' }}>\r\n                    <Card.Body>\r\n                        <Card.Title>{this.props.name}</Card.Title>\r\n                        <Card.Text> \r\n\t\t\t\t\t\t\t<button onClick={this.publishOpenDoor}>Unlock Door</button>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<button onClick={this.publishCloseDoor}>Lock Door</button>\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n\t\t\t\t<Card style={{ width: '18rem' }}>\r\n                    <Card.Body>\r\n                        <Card.Title>{this.props.name} Status</Card.Title>\r\n                        <Card.Text> \r\n                            { doorData }\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Doors;","C:\\Users\\jerem\\sptestingapp\\src\\components\\windowsData.js",["63"],"import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nimport Amplify from 'aws-amplify';\r\nimport awsconfig from './../aws-exports';\r\nimport '@aws-amplify/ui/dist/style.css';\r\n\r\nimport { PubSub, Auth } from 'aws-amplify';\r\nimport { AWSIoTProvider } from '@aws-amplify/pubsub/lib/Providers';\r\n\r\nAmplify.configure(awsconfig);\r\n\r\n// Apply plugin with configuration\r\nAmplify.addPluggable(new AWSIoTProvider({\r\n aws_pubsub_region: 'us-east-1',\r\n aws_pubsub_endpoint: 'wss://afz62ntog0e2g-ats.iot.us-east-1.amazonaws.com/mqtt',\r\n}));\r\n\r\n\r\nclass Windows extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          windowMsg: '{\"null\": 0}'\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        PubSub.subscribe('mydorm-window-iot-policy').subscribe({\r\n          next: data => {\r\n            try{\r\n\t\t\t\tconsole.log(data)\r\n              this.setState({ windowMsg: data.value });\r\n            }\r\n            catch (error){\r\n              console.log(\"Error, are you sending the correct data?\");\r\n            }\r\n          },\r\n          error: error => console.error(error),\r\n          close: () => console.log('Done'),\r\n        });\r\n      }\r\n\t  \r\n\t  publishOpenWindow = () => {\r\n\t\tconsole.log('Publishing...');\r\n\t\tPubSub.publish('mydorm-networkstatus-iot-policy', {\"Network\":\"Online\"});\r\n\t\tPubSub.publish('mydorm-window-iot-policy', {\"Window\":\"Open\"});\r\n\t  }\r\n\t  publishCloseWindow = () => {\r\n\t\tconsole.log('Publishing...');\r\n\t\tPubSub.publish('mydorm-networkstatus-iot-policy', {\"Network\":\"Offline\"});\r\n\t\tPubSub.publish('mydorm-window-iot-policy', {\"Window\":\"Closed\"});\r\n\t  }\r\n\t  \r\n    render(){\r\n        const { windowMsg } = this.state;\r\n        let windowData = windowMsg[this.props.name];\r\n\r\n        return(\r\n            <div className=\"Window\">\r\n                <Card style={{ width: '18rem' }}>\r\n                    <Card.Body>\r\n                        <Card.Title>{this.props.name}</Card.Title>\r\n                        <Card.Text> \r\n\t\t\t\t\t\t\t<button onClick={this.publishOpenWindow}>Open Window</button>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<button onClick={this.publishCloseWindow}>Close Window</button>\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n\t\t\t\t<Card style={{ width: '18rem' }}>\r\n                    <Card.Body>\r\n                        <Card.Title>{this.props.name} Status</Card.Title>\r\n                        <Card.Text> \r\n                            { windowData }\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Windows;","C:\\Users\\jerem\\sptestingapp\\src\\components\\heatersData.js",["64"],"import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nimport Amplify from 'aws-amplify';\r\nimport awsconfig from './../aws-exports';\r\nimport '@aws-amplify/ui/dist/style.css';\r\n\r\nimport { PubSub, Auth } from 'aws-amplify';\r\nimport { AWSIoTProvider } from '@aws-amplify/pubsub/lib/Providers';\r\n\r\nAmplify.configure(awsconfig);\r\n\r\n// Apply plugin with configuration\r\nAmplify.addPluggable(new AWSIoTProvider({\r\n aws_pubsub_region: 'us-east-1',\r\n aws_pubsub_endpoint: 'wss://afz62ntog0e2g-ats.iot.us-east-1.amazonaws.com/mqtt',\r\n}));\r\n\r\n\r\nclass Heaters extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          heaterMsg: '{\"null\": 0}'\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        PubSub.subscribe('mydorm-heater-iot-policy').subscribe({\r\n          next: data => {\r\n            try{\r\n\t\t\t\tconsole.log(data)\r\n              this.setState({ heaterMsg: data.value });\r\n            }\r\n            catch (error){\r\n              console.log(\"Error, are you sending the correct data?\");\r\n            }\r\n          },\r\n          error: error => console.error(error),\r\n          close: () => console.log('Done'),\r\n        });\r\n      }\r\n\t  \r\n\t  publishHeaterOn = () => {\r\n\t\tconsole.log('Publishing...');\r\n\t\tPubSub.publish('mydorm-networkstatus-iot-policy', {\"Network\":\"Online\"});\r\n\t\tPubSub.publish('mydorm-heater-iot-policy', {\"Heater\":\"On\"});\r\n\t  }\r\n\t  publishHeaterOff = () => {\r\n\t\tconsole.log('Publishing...');\r\n\t\tPubSub.publish('mydorm-networkstatus-iot-policy', {\"Network\":\"Offline\"});\r\n\t\tPubSub.publish('mydorm-heater-iot-policy', {\"Heater\":\"Off\"});\r\n\t  }\r\n\t  \r\n    render(){\r\n        const { heaterMsg } = this.state;\r\n        let heaterData = heaterMsg[this.props.name];\r\n\r\n        return(\r\n            <div className=\"Heater\">\r\n                <Card style={{ width: '18rem' }}>\r\n                    <Card.Body>\r\n                        <Card.Title>{this.props.name}</Card.Title>\r\n                        <Card.Text> \r\n\t\t\t\t\t\t\t<button onClick={this.publishHeaterOn}>Turn Heater On</button>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<button onClick={this.publishHeaterOff}>Turn Heater Off</button>\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n\t\t\t\t<Card style={{ width: '18rem' }}>\r\n                    <Card.Body>\r\n                        <Card.Title>{this.props.name} Status</Card.Title>\r\n                        <Card.Text> \r\n                            { heaterData }\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Heaters;","C:\\Users\\jerem\\sptestingapp\\src\\components\\networkStatusData.js",["65"],"import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nimport Amplify from 'aws-amplify';\r\nimport awsconfig from './../aws-exports';\r\nimport '@aws-amplify/ui/dist/style.css';\r\n\r\nimport { PubSub, Auth } from 'aws-amplify';\r\nimport { AWSIoTProvider } from '@aws-amplify/pubsub/lib/Providers';\r\n\r\nAmplify.configure(awsconfig);\r\n\r\n// Apply plugin with configuration\r\nAmplify.addPluggable(new AWSIoTProvider({\r\n aws_pubsub_region: 'us-east-1',\r\n aws_pubsub_endpoint: 'wss://afz62ntog0e2g-ats.iot.us-east-1.amazonaws.com/mqtt',\r\n}));\r\n\r\n\r\nclass NetStatus extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          netStatusMsg: '{\"null\": 0}'\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        PubSub.subscribe('mydorm-networkstatus-iot-policy').subscribe({\r\n          next: data => {\r\n            try{\r\n\t\t\t\tconsole.log(data)\r\n              this.setState({ netStatusMsg: data.value });\r\n            }\r\n            catch (error){\r\n              console.log(\"Error, are you sending the correct data?\");\r\n            }\r\n          },\r\n          error: error => console.error(error),\r\n          close: () => console.log('Done'),\r\n        });\r\n      }\r\n\t  \r\n\t  \r\n    render(){\r\n        const { netStatusMsg } = this.state;\r\n        let netStatusData = netStatusMsg[this.props.name];\r\n\r\n        return(\r\n            <div className=\"NetStatus\">\r\n\t\t\t\t<Card style={{ width: '18rem' }}>\r\n                    <Card.Body>\r\n                        <Card.Title>{this.props.name} Status</Card.Title>\r\n                        <Card.Text> \r\n                            { netStatusData }\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NetStatus;",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":5,"column":8,"nodeType":"72","messageId":"73","endLine":5,"endColumn":17},{"ruleId":"70","severity":1,"message":"74","line":6,"column":8,"nodeType":"72","messageId":"73","endLine":6,"endColumn":11},{"ruleId":"75","severity":1,"message":"76","line":93,"column":8,"nodeType":"77","endLine":93,"endColumn":61},{"ruleId":"78","severity":1,"message":"79","line":99,"column":8,"nodeType":"77","endLine":99,"endColumn":20},{"ruleId":"66","replacedBy":"80"},{"ruleId":"68","replacedBy":"81"},{"ruleId":"70","severity":1,"message":"82","line":8,"column":18,"nodeType":"72","messageId":"73","endLine":8,"endColumn":22},{"ruleId":"70","severity":1,"message":"82","line":8,"column":18,"nodeType":"72","messageId":"73","endLine":8,"endColumn":22},{"ruleId":"70","severity":1,"message":"82","line":8,"column":18,"nodeType":"72","messageId":"73","endLine":8,"endColumn":22},{"ruleId":"70","severity":1,"message":"82","line":8,"column":18,"nodeType":"72","messageId":"73","endLine":8,"endColumn":22},{"ruleId":"70","severity":1,"message":"82","line":8,"column":18,"nodeType":"72","messageId":"73","endLine":8,"endColumn":22},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["83"],["84"],"'Auth' is defined but never used.","no-global-assign","no-unsafe-negation"]